on:
  push:
    branches:
      - master

name: release-please

jobs:
  build-web:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: ./web/package-lock.json
      - run: npm ci
      - run: npm run build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: kolenka-inc
          SENTRY_PROJECT: inventory

  build-api:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: ./web/package-lock.json
      - run: npm ci
      - run: npm run lint
      - run: npm run build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: kolenka-inc
          SENTRY_PROJECT: inventory

  release:
    needs: [build-web, build-api]
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    outputs:
      NEW_VERSION: ${{ steps.new-version.outputs.NEW_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: minor
      - name: Set new version
        id: new-version
        run: echo "NEW_VERSION=${{ steps.bump-semver.outputs.new_version }}" >> $GITHUB_OUTPUT
      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: "${{ steps.bump-semver.outputs.new_version }}"
      - name: Create the GitHub release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          tag_name: ${{ steps.bump-semver.outputs.new_version }}
          name: ${{ steps.bump-semver.outputs.new_version }}
      - name: Create the Sentry release
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: kolenka-inc
          SENTRY_PROJECT: inventory
        with:
          environment: Production
          ignore_missing: true
          version: ${{ steps.bump-semver.outputs.new_version }}

  deploy-web:
    needs: [release]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      deployments: write
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: ./web/package-lock.json
      - run: npm ci
      - run: npm run build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: kolenka-inc
          SENTRY_PROJECT: inventory
      - run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          workingDirectory: "web"
          wranglerVersion: ${{ needs.release.outputs.NEW_VERSION }}
          environment: Production
          command: |
            pages deploy dist --project-name=inventory-web

  deploy-api:
    needs: [release]
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: ./api/package-lock.json
      - run: npm ci
      - run: npm run lint
      - run: npm run build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: kolenka-inc
          SENTRY_PROJECT: inventory
      - run: npm run migrate:up
        env:
          WRANGLER_HYPERDRIVE_LOCAL_CONNECTION_STRING_HYPERDRIVE: ${{ secrets.WRANGLER_HYPERDRIVE_LOCAL_CONNECTION_STRING_HYPERDRIVE }}
          AIVEN_CA: ${{ secrets.AIVEN_CA }}
      - uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          workingDirectory: "api"
          wranglerVersion: ${{ needs.release.outputs.NEW_VERSION }}
          environment: Production
          secrets: |
            ELASTICSEARCH_LOGIN
            ELASTICSEARCH_PASSWORD
            GOOGLE_SERVICEACCOUNT
        env:
          ELASTICSEARCH_LOGIN: ${{ secrets.ELASTICSEARCH_LOGIN }}
          ELASTICSEARCH_PASSWORD: ${{ secrets.ELASTICSEARCH_PASSWORD }}
          GOOGLE_SERVICEACCOUNT: ${{ secrets.GOOGLE_SERVICEACCOUNT }}
